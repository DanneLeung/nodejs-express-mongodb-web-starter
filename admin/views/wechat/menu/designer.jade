extends ../layout
block head
  meta(charset='utf-8')
  meta(http-equiv='X-UA-Compatible', content='IE=edge')
  title #{req.session.channel ? req.session.channel.channelName : appName}
  // Tell the browser to be responsive to screen width
  meta(name='keywords', content='')
  meta(name='description', content='')
  meta(name='format-detection', content='telephone=no,email=no')
  meta(name='viewport', content='width=device-width, initial-scale=1.0, minimum-scale=1, maximum-scale=1.0, user-scalable=no, minimal-ui')
  meta(name='apple-mobile-web-app-capable', content='yes')
  meta(name='apple-mobile-web-app-status-bar-style', content='grey')
  meta(name='screen-orientation', content='portrait')
  meta(name='x5-orientation', content='portrait')
  meta(http-equiv='pragma', content='no-cache')
  meta(http-equiv='Cache-Control', content='no-cache, must-revalidate')
  link(rel='shortcut icon', href='/favicon.png')
  // Bootstrap 3.3.5
  link(rel='stylesheet', href='//cdn.bootcss.com/bootstrap/3.3.6/css/bootstrap.min.css')
  // Font Awesome
  link(rel='stylesheet', href='//cdn.bootcss.com/font-awesome/4.4.0/css/font-awesome.min.css')

  // iCheck
  link(rel='stylesheet', href='//cdn.bootcss.com/iCheck/1.0.2/skins/square/blue.css')
  if NODE_ENV == 'development'
    link( rel="stylesheet" href="/themes/default/dist/css/AdminLTE.css" type="text/css")
    //link( rel="stylesheet" href="/themes/default/dist/css/skins/skin-blue.css" type="text/css")
    link( rel="stylesheet" href="/themes/default/dist/css/skins/_all-skins.min.css" type="text/css")

  if NODE_ENV == 'production'
    link( rel="stylesheet" href="/themes/default/dist/css/AdminLTE.min.css" type="text/css")
    link( rel="stylesheet" href="/themes/default/dist/css/skins/_all-skins.min.css" type="text/css")

  link( rel="stylesheet" href="/themes/default/dist/css/wechat/common.css" type="text/css")
  link( rel="stylesheet" href="/themes/default/dist/css/wechat/app.css" type="text/css")
  style.
    .wrapper {
      background-color: #ecfff5 !important;
    }
block main
  #conditionMenuDesigner.conditionMenu(ng-controller='conditionMenuDesigner')
    .app.clearfix
      .app-preview
        .app-header
        .app-content
          .inner
            .title
              h1
                span {{context.group.type == 3 ? "个性化菜单" : "默认菜单"}}
          .nav-menu
            .js-quickmenu.nav-menu-wx.clearfix(ng-class="{0 : 'has-nav-0', 1 : 'has-nav-1', 2: 'has-nav-2', 3: 'has-nav-3', 4 : 'has-nav-3'}[context.group.button.length + 1]")
              ul.nav-group.designer-x
                li.nav-group-item.js-sortable(ng-repeat='but in context.group.button', ng-class="{0 : '', 1 : 'active'}[context.activeItem == but ? 1 : 0 ]")
                  input(type='hidden', data-role='parent', data-hash='{{but.$$hashKey}}')
                  a(href='javascript:void(0);', title='拖动排序', ng-click="context.editBut('', but);")
                    i.fa.fa-minus-circle(ng-show='but.sub_button.length > 0')
                    |                  {{but.name}}
                  dl.designer-y
                    dd(ng-repeat='subBut in but.sub_button', ng-class="{0 : '', 1 : 'active'}[context.activeItem == subBut ? 1 : 0 ]")
                      input(type='hidden', data-role='sub', data-hash='{{subBut.$$hashKey}}')
                      a(href='javascript:void(0)', ng-click='context.editBut(subBut, but);') {{subBut.name}}
                    dd.js-not-sortable(ng-if='but.sub_button.length < 5')
                      a(href='javascript:void(0)', ng-click='context.addSubBut(but);')
                        i.fa.fa-plus
                li.nav-group-item(ng-if='context.group.button.length < 3', ng-hide='context.group.disabled')
                  a.text-success(href='javascript:void(0);', ng-click='context.addBut();')
                    i.fa.fa-plus
                    |  添加菜单

      .app-side
        .menu.app-conditionMenu-edit
          .arrow-left
          .inner
            .panel.panel-default
              .panel-body.form-horizontal
                .conditionMenu-wx
                  .card
                    .nav-region
                      .first-nav
                        h3 标题
                        .alert
                          .form-group
                            label.control-label.col-xs-2 标题
                            .col-xs-10
                              input.form-control(type='text', ng-model='context.group.title', ng-disabled='context.group.disabled')
                              span.help-block 仅用于区分个性化菜单
                .card(ng-if='context.group.button.length > 0')
                  .btns
                    a(href='javascript:;', ng-click='context.removeBut(context.activeItem, context.activeType)')
                      i.fa.fa-times
                  .nav-region
                    .first-nav
                      h3 菜单设置
                      .alert
                        .form-group
                          label.control-label.col-xs-2 菜单名称
                          .col-xs-10
                            .input-group
                              input#title.form-control(type='text', name='', ng-model='context.activeItem.name', ng-disabled='context.group.disabled')
                              .input-group-btn
                                span.btn.btn-primary(ng-click='context.selectEmoji();', ng-disabled='context.group.disabled')
                                  i.fa.fa-github-alt
                                  |  添加表情
                        .form-group(ng-if='context.activeType == 2 || (context.activeType == 1 && context.activeItem.sub_button.length == 0)')
                          label.control-label.col-xs-2 菜单动作
                          .col-xs-10.menu-action
                            span
                              label.radio-inline
                                input(type='radio', name='ipt', ng-model='context.activeItem.type', value='view', ng-disabled='context.group.disabled')
                                |  链接
                              label.radio-inline
                                input(type='radio', name='ipt', ng-model='context.activeItem.type', value='click', ng-disabled='context.group.disabled')
                                |  触发关键字
                              label.radio-inline
                                input(type='radio', name='ipt', ng-model='context.activeItem.type', value='scancode_push', ng-disabled='context.group.disabled')
                                |  扫码
                              label.radio-inline
                                input(type='radio', name='ipt', ng-model='context.activeItem.type', value='scancode_waitmsg', ng-disabled='context.group.disabled')
                                |  扫码（等待信息）
                              label.radio-inline
                                input(type='radio', name='ipt', ng-model='context.activeItem.type', value='pic_sysphoto', ng-disabled='context.group.disabled')
                                |  系统拍照发图
                              label.radio-inline
                                input(type='radio', name='ipt', ng-model='context.activeItem.type', value='pic_photo_or_album', ng-disabled='context.group.disabled')
                                |  拍照或者相册发图
                              label.radio-inline
                                input(type='radio', name='ipt', ng-model='context.activeItem.type', value='pic_weixin', ng-disabled='context.group.disabled')
                                |  微信相册发图
                              label.radio-inline
                                input(type='radio', name='ipt', ng-model='context.activeItem.type', value='location_select', ng-disabled='context.group.disabled')
                                |  地理位置
                            label.radio-inline
                              input(type='radio', name='ipt', ng-model='context.activeItem.type', value='media_id', ng-disabled='context.group.disabled')
                              |  回复素材
                            label.radio-inline
                              input(type='radio', name='ipt', ng-model='context.activeItem.type', value='view_limited', ng-disabled='context.group.disabled')
                              |  跳转图文
                            div(ng-show="context.activeItem.type == 'view';")
                              hr
                              .input-group
                                input#ipt-url.form-control(type='text', ng-model='context.activeItem.url', ng-disabled='context.group.disabled')
                                .input-group-btn
                                  button#search.btn.btn-primary(ng-click='context.select_link()', ng-disabled='context.group.disabled')
                                    i.fa.fa-external-link
                                    |  系统链接
                              span.help-block 指定点击此菜单时要跳转的链接（注：链接需加http://）
                              span.help-block
                                strong
                                  | 注意: 由于接口限制. 如果你没有网页oAuth接口权限, 这里输入链接直接进入微站个人中心时将会有缺陷(有可能获得不到当前访问用户的身份信息. 如果没有oAuth接口权限, 建议你使用图文回复的形式来访问个人中心)
                            div(ng-show="context.activeItem.type == 'media_id' || context.activeItem.type == 'view_limited';")
                              hr
                              .input-group
                                input#ipt-url.form-control(type='text', ng-model='context.activeItem.media_id', ng-disabled='context.group.disabled')
                                .input-group-btn
                                  button#media_id.btn.btn-primary(ng-click='context.select_mediaid()', ng-disabled='context.group.disabled')
                                    i.fa.fa-external-link
                                    |  选择素材
                              span.help-block 公众平台的素材id
                            div(ng-show="context.activeItem.type != 'view' && context.activeItem.type != 'media_id' && context.activeItem.type != 'view_limited'", style='position:relative;')
                              hr
                              .input-group
                                input#ipt-forward.form-control(type='text', ng-model='context.activeItem.key', ng-disabled='context.group.disabled')
                                .input-group-btn
                                  button#search.btn.btn-primary(ng-click='context.search()', ng-disabled='context.group.disabled')
                                    i.fa.fa-search
                                    |  搜索
                              #key-result(style='width:100%;position:absolute;top:55px;left:0px;display:none;z-index:10000')
                                ul.dropdown-menu(style='display:block;width:88%;')
                              span.help-block 指定点击此菜单时要执行的操作, 你可以在这里输入关键字, 那么点击这个菜单时就就相当于发送这个内容至系统系统
                              span.help-block
                                strong 这个过程是程序模拟的, 比如这里添加关键字: 优惠券, 那么点击这个菜单是, 系统系统相当于接受了粉丝用户的消息, 内容为"优惠券"

    .text-center(style="margin-top:20px")
      span#btn-submit.btn.btn-lg.btn-primary(ng-click='context.group.button.length > 0 ? context.submit() : context.remove()') {{context.group.button.length > 0 ? '发布到微信' : '删除默认菜单'}}
block bottom
  script(src='//cdn.bootcss.com/require.js/2.2.0/require.min.js')
  script(src='#{theme}/js/config.js')
  script(type='text/javascript').
    require(['angular.sanitize', 'underscore', 'util', 'jquery', 'jquery.ui'], function (angular, _, util, $) {
      angular.module('app', []).controller('conditionMenuDesigner', function ($scope, $http) {
        $scope.context = {};
        $scope.context.group = JSON.parse('!{menus ? menus : "null"}');

        if (!$scope.context.group) {
          $scope.context.group = {
            title: '标题',
            type: "1",
            button: [{
              name: '菜单名称',
              type: 'url',
              url: '',
              key: '',
              media_id: '',
              sub_button: []
            }],
            matchrule: {
              sex: 0,
              client_platform_type: 0,
              group_id: -1,
              country: '',
              province: '',
              city: ''
            }
          };
          if ($scope.context.group.type == 1) {
            $scope.context.group.title = '系统默认菜单';
          } else if ($scope.context.group.type == 2) {
            $scope.context.group.title = '个性化菜单';
          }
        }

        $scope.context.group.title = '默认菜单';

        $scope.context.activeIndex = 0;
        $scope.context.activeBut = $scope.context.group['button'][$scope.context.activeIndex];
        $scope.context.activeItem = $scope.context.activeBut;
        $scope.context.activeType = 1; //标识一级菜单
        //删除默认菜单
        $scope.context.remove = function () {
          if (!confirm('删除默认菜单会清空所有菜单记录，确定吗？')) {
            return false;
          }
          // 删除菜单
          location.href = "./index.php?c=platform&a=menu&do=remove&id=1";
          return false;
        };

        $scope.context.submit = function () {
          var group = $scope.context.group;
          group.button = _.sortBy(group.button, function (h) {
            var elm = $(':hidden[data-role="parent"][data-hash="' + h.$$hashKey + '"]');
            return elm.parent().index();
          });
          angular.forEach(group.button, function (j) {
            j.sub_button = _.sortBy(j.sub_button, function (h) {
              var e = $(':hidden[data-role="sub"][data-hash="' + h.$$hashKey + '"]');
              return e.parent().index();
            });
          });

          if (!$.trim(group.title)) {
            util.message('没有设置标题', '', 'error');
            return false;
          }
          if (group.button.length < 1) {
            util.message('没有设置菜单', '', 'error');
            return false;
          }
          var error = {name: '', action: ''};
          angular.forEach(group.button, function (val, index) {
            if ($.trim(val.name) == '') {
              this.name += '第' + (index + 1) + '个一级菜单未设置菜单名称<br>';
            }
            if (val.sub_button.length > 0) {
              angular.forEach(val.sub_button, function (v, index1) {
                if ($.trim(v.name) == '') {
                  this.name += '第' + (index + 1) + '个一级菜单中的第' + (index1 + 1) + '个二级菜单未设置菜单名称<br>';
                }
                if ((v.type == 'view' && $.trim(v.url) == '') || ((v.type != 'view' && v.type != 'media_id' && v.type != 'view_limited') && $.trim(v.key) == '') || ((v.type == 'media_id' || v.type == 'view_limited') && !$.trim(v.media_id))) {
                  this.action += '菜单【' + val.name + '】的子菜单【' + v.name + '】未设置操作选项. <br />';
                }
              }, error);
            } else {
              if ((val.type == 'view' && $.trim(val.url) == '') || ((val.type != 'view' && val.type != 'media_id' && val.type != 'view_limited') && $.trim(val.key) == '') || ((val.type == 'media_id' || val.type == 'view_limited') && !$.trim(val.media_id))) {
                this.action += '菜单【' + val.name + '】不存在子菜单并且未设置操作选项. <br />';
              }
            }
          }, error);

          if (error.name) {
            util.message(error.title, '', 'error');
            return;
          }
          if (error.action) {
            util.message(error.action, '', 'error');
            return;
          }
          $('#btn-submit').attr('disabled', true);
          $http.post(location.href, {group: group, method: 'save'}).success(function (dat) {
            if (dat.message.errno != 0) {
              $('#btn-submit').attr('disabled', false);
              util.message(dat.message.message, '', 'error');
            } else {
              util.message('创建菜单成功. ', '', 'success');
            }
          });
        }

        $scope.context.triggerActiveBut = function (but) {
          var index = $.inArray(but, $scope.context.group.button);
          if (index == -1) return false;
          $scope.context.activeIndex = index;
          $scope.context.activeBut = $scope.context.group['button'][$scope.context.activeIndex];
          $scope.context.activeItem = $scope.context.activeBut;
          $scope.context.activeType = 1;
        };

        $scope.context.editBut = function (subbut, but) {
          $scope.context.triggerActiveBut(but);
          if (!subbut) {
            $scope.context.activeItem = but;
            $scope.context.activeType = 1;
          } else {
            $scope.context.activeItem = subbut;
            $scope.context.activeType = 2;
          }
        };

        $scope.context.addBut = function () {
          if ($scope.context.group['button'].length >= 3) {
            return;
          }
          $scope.context.group['button'].push({
            name: '菜单名称',
            type: 'view',
            url: '',
            key: '',
            media_id: '',
            sub_button: []
          });
          var but = $scope.context.group['button'][$scope.context.group.button.length - 1];
          $scope.context.triggerActiveBut(but);
          $('.designer-x').sortable({
            items: '.js-sortable',
            axis: 'x'
          });
        }

        $scope.context.removeBut = function (but, type) {
          if (type == 1) {
            if (!confirm('将同时删除所有子菜单,是否继续')) {
              return false;
            }
            $scope.context.group.button = _.without($scope.context.group.button, but);
            $scope.context.triggerActiveBut($scope.context.group['button'][0]);
          } else {
            $scope.context.activeBut.sub_button = _.without($scope.context.activeBut.sub_button, but);
            $scope.context.triggerActiveBut($scope.context.activeBut);
          }
        };

        $scope.context.addSubBut = function (but) {
          if ($scope.context.group.disabled == 1) {
            return false;
          }
          $scope.context.triggerActiveBut(but);
          if ($scope.context.activeBut.sub_button.length >= 5) {
            return;
          }
          $scope.context.activeBut.sub_button.push({
            name: '子菜单名称',
            type: 'url',
            url: '',
            key: '',
            media_id: ''
          });
          $('.designer-y').sortable({
            items: 'dd',
            axis: 'y',
            cancel: '.js-not-sortable'
          });
          $scope.context.activeItem = $scope.context.activeBut.sub_button[$scope.context.activeBut.sub_button.length - 1];
          $scope.context.activeType = 2;
        }

        /*选择Emoji表情*/
        $scope.context.selectEmoji = function () {
          util.emojiBrowser(function (emoji) {
            var text = '::' + emoji.find("span").text() + '::';
            $('#title').setCaret();
            $('#title').insertAtCaret(text);
            $scope.context.activeItem.name = $('#title').val();
            $scope.$digest();
          });
        };

        //点击选择【系统连接】事件
        $scope.context.select_link = function () {
          var ipt = $(this).parent().prev();
          util.linkBrowser(function (href) {
            var site_url = "http://wz.9cubic.com/";
            if (href.substring(0, 4) == 'tel:') {
              util.message('自定义菜单不能设置为一键拨号');
              return;
            } else if (href.indexOf("http://") == -1 && href.indexOf("https://") == -1) {
              href = href.replace('./index.php?', '/index.php?');
              href = site_url + 'app' + href;
            }
            $scope.context.activeItem.url = href;
            $scope.$digest();
          });
        };

        $scope.context.search = function () {
          var search_value = $('#ipt-forward').val();
          $.post("./index.php?c=platform&a=menu&do=search_key&", {'key_word': search_value}, function (data) {
            var data = $.parseJSON(data);
            var total = data.length;
            var html = '';
            if (total > 0) {
              for (var i = 0; i < total; i++) {
                html += '<li><a href="javascript:;">' + data[i] + '</a></li>';
              }
            } else {
              html += '<li><a href="javascript:;" id="no-result">没有找到您输入的关键字</a></li>';
            }
            $('#key-result ul').html(html);
            $('#key-result ul li a[id!="no-result"]').click(function () {
              $('#ipt-forward').val($(this).html());
              $scope.context.activeItem.key = $(this).html();
              $('#key-result').hide();
            });
            $('#key-result').show();
          });
        };

        $scope.context.select_mediaid = function () {
          var option = {
            'ignore': {
              'wxcard': true
            }
          };
          if ($scope.context.activeItem.type == 'view_limited') {
            option.ignore = {
              'image': true,
              'voice': true,
              'video': true,
              'wxcard': true
            };
          }
          util.material(function (material) {
            //$scope.context.activeItem.media_id = material.media_id;
            $scope.context.activeItem.media_id = material[0];
            $scope.$digest();
          }, option);
        };
      });
      angular.bootstrap($('#conditionMenuDesigner')[0], ['app']);
      $(function () {
        $('.designer-y').sortable({
          items: 'dd',
          axis: 'y',
          cancel: '.js-not-sortable'
        });

        $('.designer-x').sortable({
          items: '.js-sortable',
          axis: 'x'
        });
      });
    });
